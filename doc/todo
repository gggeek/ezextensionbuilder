# high priority

. acommodate better git-based workflows:
  1. a "validate" task which runs unit tests / compliance checks
  2. a "tag" task which changes the version info files (even in pake config file itself?), and uploads them to git. It also gives feedback on git revision
  3. a "build" task which produces artifacts
  4. an "upload" task which creates the release on github and uploads the artifacts
     q: shall we instead upload in a separate branch the whole artifacts?

. fix: zip command does not work (searches for dist dir inside build dir)

. fix: all-code-reports task give "Notice: Undefined index: phpcs" and phpmd as well

# general

. test running report generation tasks against ezp (5) instead of an extension

. when looking around for composer dirs, test value of COMPOSER_XXX env vars (see http://getcomposer.org/doc/03-cli.md#composer-home)

. rewrite fat_dist task not to use eZComponents for creating the tarball

. ezfind: should not pack manual in odf format => improve exclude list w. depth

. allow ezextensionbuilder to build self (does it means anything at all now?)

. allow to build many extensions in a single call
  (workaround: use extension dependencies with a fake 'root' extension)

. add more detailed documentation of expected coding/file layouts standards for extensions

. copy task names from http://jenkins-php.org/, composer (as duplicate names for current tasks)

. add support for different dir schemas for extensions providing packages? nb: better if we can do it without that...

. move all tasks involving ez4-packages to a separate php class?

. improve locking schema to avoid non-reentrant operations (such as init) to execute in parallel:
  at the moment we only protect access to the "build" dir, not to the "pake" or "dist" ones

# new tasks

. a "deploy" task which commits the dist dir to the desired vcs repository in a separate branch / tag.
  This makes a lot of sense since
  - we expect end users of extensions to download them from github instead of projects.ez.no
  - it is nicer for end users to be able to download a version of the extension which includes docs and has proper version tags,
    rather than a version which is just a tag added on the master branch

. add more code quality checks (possibly from other extensions/tools/packages)
  - proper php opening tag for ini files, absence of charset tag (or only utf8 recommended)
  - proper naming of ini files
  - css validation (via csslint - needs node.js - or w3.org validator? see http://jigsaw.w3.org/css-validator/api.html)
  - js validation (via jshint - needs node.js )
  - translation checking (see eg. checks done in ez 4.5+ cli script)
  - hhvm-wrapper?
  - yui-something? (look at ezcs)
  - scrutinizer-ci/php-analyzer (needs php 4)
  - sensiolabs/security-checker /needs composer.lock of main project)

. add support for launching testsuite tests => needs a full-fledged ez installation ?

. add more metrics-generating tasks? See f.e. phpqatools.org, http://jenkins-php.org/, https://scrutinizer-ci.com/docs/

. add a task to generate .sql files from .dba ones (needs an ez installation)

. changelog generation task: if it's not there, build it from git/svn commit messages
  (also update ez package with that info)

. deployment task to upload extension to projects.ez.no
  - might need first some changes on projects.ez.no site

. a task that checks for presence of update sql scripts (needs to have access to previous version sources too)

. css/js minification task (not very important since we have ezjscore)

. add tasks to generate sample ezinfo.php and extension.xml files

. add task that displays the tool's own changelog (or as an option to the tool-version task)

. add an apply-patch task to apply patch files at build time (???)

. write into extension (where?) the git/svn revision

# improve tasks

. all report tasks:
  . allow exclusion of directories from code analysis
  . allow usage of "stdout" as directory for outputting reports

. init task: take list of removed dirs/files from config file

. init task that starts with a file untar

. add support for generating more docs:
  . manual from docbook
  . api docs from sami, phpdoc2, (phpdox?) besides doxygen
  . rst docs in other dirs?

. do not try to replace tokens in doxygen-generated css files

. dist task: allow to specify .tar.bz2 output format

. clean task: allow to only delete extension dir, not complete build dir

. update-extra-files: also use EXTENSION_NAME and EXTENSION_COPYRIGHT tokens

. allow username/password for svn/git tasks

. packaging task:
  . allow more files to be put in package docs besides LICENSE & README
  . grab dependencies from extension.xml and put them into package file
  . verify that package.xml is valid xml & compliant with the package schema
  . better regexps to always update package.xml even on iterated "build --skip-init" runs
